"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1056],{15680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>m});var o=n(96540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),g=p(n),d=i,m=g["".concat(s,".").concat(d)]||g[d]||u[d]||a;return n?o.createElement(m,r(r({ref:t},c),{},{components:n})):o.createElement(m,r({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,r=new Array(a);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[g]="string"==typeof e?e:i,r[1]=l;for(var p=2;p<a;p++)r[p]=n[p];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},12587:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var o=n(58168),i=(n(96540),n(15680));const a={},r="Natural Language Testing with Detox Copilot",l={unversionedId:"copilot/testing-with-copilot",id:"version-20.x/copilot/testing-with-copilot",title:"Natural Language Testing with Detox Copilot",description:"In this tutorial, we'll explore how to use Detox Copilot to write end-to-end tests using natural language commands. Detox Copilot leverages large language models (LLMs) to translate human-readable instructions into Detox actions and assertions, making test writing more intuitive and accessible.",source:"@site/versioned_docs/version-20.x/copilot/testing-with-copilot.md",sourceDirName:"copilot",slug:"/copilot/testing-with-copilot",permalink:"/Detox/docs/copilot/testing-with-copilot",draft:!1,editUrl:"https://github.com/wix/Detox/edit/master/docs/versioned_docs/version-20.x/copilot/testing-with-copilot.md",tags:[],version:"20.x",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Uninstalling Detox",permalink:"/Detox/docs/guide/uninstalling"},next:{title:"Detox Copilot Best Practices",permalink:"/Detox/docs/copilot/best-practices"}},s={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Setting Up Detox",id:"setting-up-detox",level:2},{value:"Implementing a <code>PromptHandler</code>",id:"implementing-a-prompthandler",level:2},{value:"Example of a <code>PromptHandler</code> for OpenAI&#39;s GPT-4",id:"example-of-a-prompthandler-for-openais-gpt-4",level:3},{value:"Initializing Detox Copilot",id:"initializing-detox-copilot",level:2},{value:"Writing Tests with Detox Copilot",id:"writing-tests-with-detox-copilot",level:2},{value:"Writing Step-by-Step Tests",id:"writing-step-by-step-tests",level:3},{value:"Hybrid Tests with Copilot and Detox APIs",id:"hybrid-tests-with-copilot-and-detox-apis",level:3},{value:"Locating Elements with Copilot",id:"locating-elements-with-copilot",level:3},{value:"Contributing to Detox Copilot",id:"contributing-to-detox-copilot",level:2}],c={toc:p},g="wrapper";function u(e){let{components:t,...a}=e;return(0,i.yg)(g,(0,o.A)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"natural-language-testing-with-detox-copilot"},"Natural Language Testing with Detox Copilot"),(0,i.yg)("p",null,"In this tutorial, we'll explore how to use ",(0,i.yg)("strong",{parentName:"p"},"Detox Copilot")," to write end-to-end tests using natural language commands. Detox Copilot leverages large language models (LLMs) to translate human-readable instructions into Detox actions and assertions, making test writing more intuitive and accessible."),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"Detox Copilot is integrated into Detox and requires no additional installation. For complete API details, refer to our ",(0,i.yg)("a",{parentName:"p",href:"/Detox/docs/api/copilot"},"Detox Copilot API documentation"),".")),(0,i.yg)("admonition",{title:"Work in Progress",type:"caution"},(0,i.yg)("p",{parentName:"admonition"},(0,i.yg)("strong",{parentName:"p"},"Note"),": Detox Copilot is in active development. APIs are subject to change in future releases.")),(0,i.yg)("h2",{id:"introduction"},"Introduction"),(0,i.yg)("p",null,"Detox Copilot simplifies the process of writing tests by allowing you to describe test steps in natural language.\nIt interprets these instructions and translates them into Detox commands. This guide will help you integrate Detox Copilot into your testing workflow and provide best practices for writing effective intents."),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"Demo",src:n(36574).A,width:"800",height:"450"})),(0,i.yg)("h2",{id:"setting-up-detox"},"Setting Up Detox"),(0,i.yg)("p",null,"Before you begin, ensure that your Detox environment is properly set up.\nIf you need assistance with the setup, refer to the ",(0,i.yg)("a",{parentName:"p",href:"docs/introduction/getting-started/"},"Detox Getting Started Guide"),"."),(0,i.yg)("h2",{id:"implementing-a-prompthandler"},"Implementing a ",(0,i.yg)("inlineCode",{parentName:"h2"},"PromptHandler")),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"PromptHandler")," is a crucial component that interfaces with your LLM service.\nBelow is an example of how to implement a ",(0,i.yg)("inlineCode",{parentName:"p"},"PromptHandler")," using OpenAI's GPT-4 API."),(0,i.yg)("p",null,"You can adapt this code to work with other LLMs or services as needed. You may also find pre-built ",(0,i.yg)("inlineCode",{parentName:"p"},"PromptHandler")," implementations for popular LLMs in the ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/wix-incubator/detox-copilot"},"detox-copilot repository on GitHub"),"."),(0,i.yg)("admonition",{title:"Open for Contributions",type:"note"},(0,i.yg)("p",{parentName:"admonition"},"If you have implemented a ",(0,i.yg)("inlineCode",{parentName:"p"},"PromptHandler")," for a specific LLM or service, consider contributing it to the Detox Copilot repository to help the community.")),(0,i.yg)("h3",{id:"example-of-a-prompthandler-for-openais-gpt-4"},"Example of a ",(0,i.yg)("inlineCode",{parentName:"h3"},"PromptHandler")," for OpenAI's GPT-4"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"const { Configuration, OpenAIApi } = require('openai');\nconst path = require('path');\n\nclass OpenAIPromptHandler {\n  constructor(apiKey) {\n    const configuration = new Configuration({ apiKey });\n    this.openai = new OpenAIApi(configuration);\n  }\n\n  async runPrompt(prompt, imagePath) {\n    const messages = [\n      { role: 'system', content: 'You are a test automation assistant.' },\n      { role: 'user', content: prompt },\n    ];\n\n    // If an image is provided, \"upload\" it and include the URL in the prompt\n    if (imagePath && this.isSnapshotImageSupported()) {\n      try {\n        const imageUrl = await this.uploadImage(imagePath);\n        messages.push({\n          role: 'user',\n          content: `Here is an image for reference: ${imageUrl}`,\n        });\n      } catch (error) {\n        console.error('Error uploading image:', error);\n        throw new Error('Failed to upload image');\n      }\n    }\n\n    const response = await this.openai.createChatCompletion({\n      model: 'gpt-4',\n      messages,\n    });\n\n    return response.data.choices[0].message.content;\n  }\n\n  async uploadImage(imagePath) {\n    // Uploads the image and returns the URL\n  }\n\n  isSnapshotImageSupported() {\n    return true; // Set to true to handle image uploads\n  }\n}\n\nmodule.exports = OpenAIPromptHandler;\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Explanation"),":"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"strong"},"runPrompt")),": Sends the prompt to the LLM and returns the response."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"strong"},"isSnapshotImageSupported")),": Indicates whether the LLM can handle snapshot images. If set to ",(0,i.yg)("inlineCode",{parentName:"li"},"true"),", the handler will include image URLs in the prompt and will include them when instructing Detox Copilot.")),(0,i.yg)("h2",{id:"initializing-detox-copilot"},"Initializing Detox Copilot"),(0,i.yg)("p",null,"Initialize Detox Copilot with your ",(0,i.yg)("inlineCode",{parentName:"p"},"PromptHandler")," before running any tests.\nThis is typically done in the ",(0,i.yg)("inlineCode",{parentName:"p"},"beforeAll")," hook or a setup file."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Example"),":"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"const {copilot} = require('detox/index');\nconst OpenAIPromptHandler = require('./OpenAIPromptHandler');\n\nbeforeAll(() => {\n  const promptHandler = new OpenAIPromptHandler('YOUR_OPENAI_API_KEY');\n  copilot.init(promptHandler);\n});\n")),(0,i.yg)("h2",{id:"writing-tests-with-detox-copilot"},"Writing Tests with Detox Copilot"),(0,i.yg)("p",null,"With Detox Copilot initialized, you can now write tests using the ",(0,i.yg)("inlineCode",{parentName:"p"},"copilot.perform")," method."),(0,i.yg)("h3",{id:"writing-step-by-step-tests"},"Writing Step-by-Step Tests"),(0,i.yg)("p",null,"Detox Copilot allows you to write tests by providing a sequence of natural language instructions. Each instruction corresponds to a single action or assertion."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"it('should verify element sizes and button states', async () => {\n  await copilot.perform(\n    'Launch the app with notification permissions enabled',\n    'Navigate to the \"Settings\" page',\n    'Verify that the \"Save\" button is disabled',\n    'Locate the profile picture element',\n    'Verify that the profile picture size is 100 x 100 pixels and that the image is available and rendered',\n    'Tap on the \"Edit Profile\" button',\n    'Verify that the \"Save\" button is now enabled',\n    'Verify that the \"Username\" field text is bold'\n  );\n});\n")),(0,i.yg)("p",null,"In the example above, Copilot can perform checks that go beyond traditional UI testing, such as verifying element sizes, button states (enabled/disabled), or text styles (e.g., bold). This is thanks to the combination of Detox code-generation and multimodal LLMs that can analyze the snapshots."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step-by-Step Instructions"),": Each step is a separate string, representing a single action or assertion."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Sequential Execution"),": Steps are executed in order, allowing you to describe complex interactions intuitively.")),(0,i.yg)("h3",{id:"hybrid-tests-with-copilot-and-detox-apis"},"Hybrid Tests with Copilot and Detox APIs"),(0,i.yg)("p",null,"You can also combine Copilot commands with traditional Detox APIs for more control."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"it('should add an item to the cart', async () => {\n  await copilot.perform(\n    'Launch the app',\n    'Navigate to the \"Products\" page',\n    'Tap on the \"Add to Cart\" button for the first product'\n  );\n\n  const cartBadge = element(by.id('cart-badge'));\n  await expect(cartBadge).toHaveText('1');\n\n  await copilot.perform(\n    'Navigate to the \"Cart\" page',\n    'Verify that the product is listed in the cart'\n  );\n});\n")),(0,i.yg)("h3",{id:"locating-elements-with-copilot"},"Locating Elements with Copilot"),(0,i.yg)("p",null,"You can also use Copilot to retrieve values, locate elements, or perform advanced checks such as verifying element sizes or button states."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"it('should display the correct page title', async () => {\n  const pageTitleElement = await copilot.perform(\n    'Launch the app',\n    'Navigate to the \"Profile\" page',\n    'Locate the page title element'\n  );\n\n  await expect(pageTitleElement).toHaveText('Profile');\n});\n")),(0,i.yg)("h2",{id:"contributing-to-detox-copilot"},"Contributing to Detox Copilot"),(0,i.yg)("p",null,"Contributions are welcome!\nVisit the ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/wix-incubator/detox-copilot"},"Detox Copilot GitHub Repository")," to open issues or pull requests if they are relevant to the core-library functionality or open a it under ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/wix/Detox"},"Detox repository")," if it is related to Detox-Copilot integration or if you are not sure where the issue should be opened."))}u.isMDXComponent=!0},36574:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/copilot-demo-6f1e5193e3cea07de196d443153fcd3a.gif"}}]);